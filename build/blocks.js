!function n(r,s,c){function u(t,e){if(!s[t]){if(!r[t]){var a="function"==typeof require&&require;if(!e&&a)return a(t,!0);if(i)return i(t,!0);var o=new Error("Cannot find module '"+t+"'");throw o.code="MODULE_NOT_FOUND",o}var l=s[t]={exports:{}};r[t][0].call(l.exports,function(e){return u(r[t][1][e]||e)},l,l.exports,n,r,s,c)}return s[t].exports}for(var i="function"==typeof require&&require,e=0;e<c.length;e++)u(c[e]);return u}({1:[function(e,t,a){"use strict";function n(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var a=[],o=!0,l=!1,n=void 0;try{for(var r,s=e[Symbol.iterator]();!(o=(r=s.next()).done)&&(a.push(r.value),!t||a.length!==t);o=!0);}catch(e){l=!0,n=e}finally{try{o||null==s.return||s.return()}finally{if(l)throw n}}return a}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var o=wp.i18n.__,l=wp.blocks.registerBlockType,r=(wp.element.createElement,wp.editor),s=(r.InnerBlocks,r.InspectorControls),c=wp.components,u=(c.Button,c.PanelBody),i=c.TextControl,p=c.TextareaControl,d=c.SelectControl,m=c.ServerSideRender,b=c.ToggleControl,h=(wp.compose.withState,wp.data.select,[]);fetch("/wp-json/whitepaper-api/post-types/public").then(function(e){return e.json()}).then(function(e){for(var t=0,a=Object.entries(e);t<a.length;t++){var o=n(a[t],2),l={value:o[0],label:o[1]};h.push(l)}}),l("whitepaper-blocks/carousel-block",{title:o("Carousel"),description:o("A customizable Bootstrap carousel block."),icon:"slides",category:"formatting",attributes:{blockId:{type:"string",default:null},carouselClasses:{type:"string",default:"row no-gutters"},postType:{type:"string",default:"post"},numPosts:{type:"string",default:3},postClasses:{type:"string",default:null},carouselLayout:{type:"string",default:null},carouselIndicators:{type:"boolean",default:!1},carouselControls:{type:"boolean",default:!1},taxonomy:{type:"string",default:null},taxonomyTerm:{type:"string",default:null}},keywords:[o("carousel"),o("slider")],edit:function(e){var t=e.setAttributes;return[React.createElement(s,null,React.createElement(u,{title:"Carousel Settings",initialOpen:!0},React.createElement(i,{label:"Block ID *",value:e.attributes.blockId,help:o("A unique HTML ID for this block. Make sure to use all lower case and dashes instead of spaces"),placeholder:"my-id",required:!0,onChange:function(e){t(e?{blockId:e}:{blockId:null})}}),React.createElement(i,{label:"Carousel Classes",value:e.attributes.carouselClasses,help:o(React.createElement("p",null,"One or more HTML classes to be added to the carousel container. Separate classes with a space, but make sure that each class uses all lower case and dashes instead of spaces. This is a great place to use ",React.createElement("a",{href:"https://getbootstrap.com/docs/4.1/layout/grid/",target:"_blank"},"Bootstrap rows or containers"),".")),placeholder:"my-class",onChange:function(e){t(e?{carouselClasses:e}:{carouselClasses:null})}}),React.createElement(d,{label:"Post Type",value:e.attributes.postType,help:o("What kind of posts do you want to show? You can choose blog posts, pages, or a custom post type."),options:h,onChange:function(e){t({postType:e})}}),React.createElement(i,{label:"Number of Posts to Display",value:e.attributes.numPosts,help:o("The maximum number of posts to be displayed from your selected post type"),type:"number",onChange:function(e){t({numPosts:e})}}),React.createElement(i,{label:"Post Classes",value:e.attributes.postClasses,help:o(React.createElement("p",null,"One or more CSS classes to be added to each post in this block. Separate classes with a space, but make sure that each class uses all lower case and dashes instead of spaces. This is a great place to use ",React.createElement("a",{href:"https://getbootstrap.com/docs/4.1/layout/grid/",target:"_blank"},"Bootstrap columns"),".")),placeholder:"my-class",onChange:function(e){t(e?{postClasses:e}:{postClasses:null})}})),React.createElement(u,{title:"Advanced Layout Settings",initialOpen:!1},React.createElement(p,{label:"Carousel Layout",value:e.attributes.carouselLayout,help:o(React.createElement("p",null,"How would you like the individual slides in the loop to be laid out? You can use HTML and ",React.createElement("a",{href:"https://getbootstrap.com/docs/4.1/layout/grid/",target:"_blank"},"Bootstrap")," for formatting. You can also use ",React.createElement("a",{href:"https://github.com/drbrickhouse/whitepaper-blocks#whitepaper-handlebars"},"WhitePaper Handlebars")," to display dynamic information. If you are not sure, you can leave this blank and just use the default.")),onChange:function(e){t(e?{carouselLayout:e}:{carouselLayout:null})}}),React.createElement(b,{label:"Carousel Indicators",checked:e.attributes.carouselIndicators,onChange:function(e){t({carouselIndicators:e})}}),React.createElement(b,{label:"Carousel Controls",checked:e.attributes.carouselControls,onChange:function(e){t({carouselControls:e})}})),React.createElement(u,{title:"Advanced Query Settings",initialOpen:!1},React.createElement(i,{label:"Taxonomy",value:e.attributes.taxonomy,placeholder:"category",onChange:function(e){t(e?{taxonomy:e}:{taxonomy:null})}}),React.createElement(i,{label:"Taxonomy Term",value:e.attributes.taxonomyTerm,placeholder:"my-category",onChange:function(e){t(e?{taxonomyTerm:e}:{taxonomyTerm:null})}}))),React.createElement("div",{className:"block-wrap"},React.createElement("div",{className:"block-title"},"Carousel"),React.createElement(m,{block:"whitepaper-blocks/carousel-block",attributes:e.attributes,className:e.className}))]},save:function(e){return null}})},{}],2:[function(e,t,a){"use strict";var o=e("../modules/functions"),l=wp.i18n.__,n=wp.blocks.registerBlockType,r=wp.editor,s=r.InspectorControls,c=r.MediaUpload,u=r.InnerBlocks,i=wp.components,p=i.PanelBody,d=i.TextControl;n("whitepaper-blocks/hero-block",{title:l("Hero"),description:l("A customizable hero image block"),icon:"slides",category:"formatting",attributes:{backgroundImage:{type:"string",default:null},backgroundImageStyle:{type:"string",default:null},blockId:{type:"string",default:null},heroClasses:{type:"string",default:null}},keywords:[l("hero"),l("banner")],edit:function(a){var t=a.setAttributes;return[React.createElement(s,null,React.createElement(p,null,React.createElement(c,{label:"Background Image",onSelect:function(e){t({backgroundImage:e.sizes.full.url}),t({backgroundImageStyle:"url("+e.sizes.full.url+")"})},type:"image",value:a.attributes.backgroundImage,render:function(e){var t=e.open;return(0,o.renderImageUpload)(t,a)}}),React.createElement(d,{label:"Block ID",value:a.attributes.blockId,help:l("A unique HTML ID for this block. Make sure to use all lower case and dashes instead of spaces"),placeholder:"my-id",onChange:function(e){t(e?{blockId:e}:{blockId:null})}}),React.createElement(d,{label:"Hero Classes",value:a.attributes.heroClasses,help:l(React.createElement("p",null,"One or more HTML classes to be added to the hero image container. Separate classes with a space, but make sure that each class uses all lower case and dashes instead of spaces. This is a great place to use ",React.createElement("a",{href:"https://getbootstrap.com/docs/4.1/layout/grid/",target:"_blank"},"Bootstrap rows or containers"),".")),placeholder:"my-class",onChange:function(e){t(e?{heroClasses:e}:{heroClasses:null})}}))),React.createElement("div",{className:"block-wrap"},React.createElement("div",{className:"block-title"},"Hero"),React.createElement("div",{className:[a.className,"row"].filter(Boolean).join(" "),id:a.attributes.blockId,style:{backgroundImage:a.attributes.backgroundImageStyle}},React.createElement("div",{className:"col-md-12"},React.createElement("div",{className:"row whitepaper-block-inner"},React.createElement("div",{className:"col-md-12"},React.createElement("div",{className:[a.attributes.heroClasses,"hero-overlay"].filter(Boolean).join(" ")},React.createElement("div",{className:"col-md-12"},React.createElement(u,null))))))))]},save:function(e){return React.createElement("div",{className:[e.className,"row"].filter(Boolean).join(" "),id:e.attributes.blockId,style:{backgroundImage:e.attributes.backgroundImageStyle}},React.createElement("div",{className:"col-md-12"},React.createElement("div",{className:"row whitepaper-block-inner"},React.createElement("div",{className:"col-md-12"},React.createElement("div",{className:[e.attributes.heroClasses,"hero-overlay"].filter(Boolean).join(" ")},React.createElement("div",{className:"col-md-12"},React.createElement(u.Content,null)))))))}})},{"../modules/functions":5}],3:[function(e,t,a){"use strict";function n(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var a=[],o=!0,l=!1,n=void 0;try{for(var r,s=e[Symbol.iterator]();!(o=(r=s.next()).done)&&(a.push(r.value),!t||a.length!==t);o=!0);}catch(e){l=!0,n=e}finally{try{o||null==s.return||s.return()}finally{if(l)throw n}}return a}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var o=wp.i18n.__,l=wp.blocks.registerBlockType,r=(wp.element.createElement,wp.editor),s=(r.InnerBlocks,r.InspectorControls),c=wp.components,u=(c.Button,c.PanelBody),i=c.TextControl,p=c.TextareaControl,d=c.SelectControl,m=c.ServerSideRender,b=(wp.data.select,[]);fetch("/wp-json/whitepaper-api/post-types/public").then(function(e){return e.json()}).then(function(e){for(var t=0,a=Object.entries(e);t<a.length;t++){var o=n(a[t],2),l={value:o[0],label:o[1]};b.push(l)}}),l("whitepaper-blocks/loop-block",{title:o("Loop"),description:o("A customizable loop block."),icon:"controls-repeat",category:"formatting",attributes:{blockId:{type:"string",default:null},title:{type:"string",default:null},postType:{type:"string",default:"post"},numPosts:{type:"string",default:3},postClasses:{type:"string",default:"col-12"},beforeLoopLayout:{type:"string",default:null},postLayout:{type:"string",default:null},afterLoopLayout:{type:"string",default:null},taxonomy:{type:"string",default:null},taxonomyTerm:{type:"string",default:null},offset:{type:"string",default:0}},keywords:[o("loop"),o("query")],edit:function(e){var t=e.setAttributes;return[React.createElement(s,null,React.createElement(u,{title:"Loop Settings",initialOpen:!0},React.createElement(i,{label:"Block Title",value:e.attributes.title,onChange:function(e){t(e?{title:e}:{title:null})}}),React.createElement(i,{label:"Block ID",value:e.attributes.blockId,help:o("A unique HTML ID for this block. Make sure to use all lower case and dashes instead of spaces"),placeholder:"my-id",onChange:function(e){t(e?{blockId:e}:{blockId:null})}}),React.createElement(d,{label:"Post Type",value:e.attributes.postType,options:b,help:o("What kind of posts do you want to show? You can choose blog posts, pages, or a custom post type."),onChange:function(e){t({postType:e})}}),React.createElement(i,{label:"Number of Posts to Display",value:e.attributes.numPosts,help:o("The maximum number of posts to be displayed from your selected post type"),type:"number",onChange:function(e){t({numPosts:e})}}),React.createElement(i,{label:"Post Classes",value:e.attributes.postClasses,help:o(React.createElement("p",null,"One or more HTML classes to be added to each post in this block. Separate classes with a space, but make sure that each class uses all lower case and dashes instead of spaces. This is a great place to use ",React.createElement("a",{href:"https://getbootstrap.com/docs/4.1/layout/grid/",target:"_blank"},"Bootstrap rows or containers"),".")),placeholder:"my-class",onChange:function(e){t(e?{postClasses:e}:{postClasses:null})}})),React.createElement(u,{title:"Advanced Layout Settings",initialOpen:!1},React.createElement(p,{label:"Before the Loop",value:e.attributes.beforeLoopLayout,help:o(React.createElement("p",null,"Information to be placed before the loop. This will only be shown once, no matter how many posts are displayed. You can use HTML and ",React.createElement("a",{href:"https://getbootstrap.com/docs/4.1/layout/grid/",target:"_blank"},"Bootstrap")," for formatting. You can also use ",React.createElement("a",{href:"https://github.com/drbrickhouse/whitepaper-blocks#whitepaper-handlebars"},"WhitePaper Handlebars")," to display dynamic information. This section is totally optional.")),onChange:function(e){t(e?{beforeLoopLayout:e}:{beforeLoopLayout:null})}}),React.createElement(p,{label:"Post Layout",value:e.attributes.postLayout,help:o(React.createElement("p",null,"How would you like the individual slides in the loop to be laid out? You can use HTML and ",React.createElement("a",{href:"https://getbootstrap.com/docs/4.1/layout/grid/",target:"_blank"},"Bootstrap")," for formatting. You can also use ",React.createElement("a",{href:"https://github.com/drbrickhouse/whitepaper-blocks#whitepaper-handlebars"},"WhitePaper Handlebars")," to display dynamic information. If you are not sure, you can leave this blank and just use the default.")),onChange:function(e){t(e?{postLayout:e}:{postLayout:null})}}),React.createElement(p,{label:"After the Loop",value:e.attributes.afterLoopLayout,help:o(React.createElement("p",null,"Information to be placed after the loop. This will only be shown once, no matter how many posts are displayed. You can use HTML and ",React.createElement("a",{href:"https://getbootstrap.com/docs/4.1/layout/grid/",target:"_blank"},"Bootstrap")," for formatting. You can also use ",React.createElement("a",{href:"https://github.com/drbrickhouse/whitepaper-blocks#whitepaper-handlebars"},"WhitePaper Handlebars")," to display dynamic information. This section is totally optional.")),onChange:function(e){t(e?{afterLoopLayout:e}:{afterLoopLayout:null})}})),React.createElement(u,{title:"Advanced Query Settings",initialOpen:!1},React.createElement(i,{label:"Taxonomy",value:e.attributes.taxonomy,placeholder:"category",onChange:function(e){t(e?{taxonomy:e}:{taxonomy:null})}}),React.createElement(i,{label:"Taxonomy Term",value:e.attributes.taxonomyTerm,placeholder:"my-category",onChange:function(e){t(e?{taxonomyTerm:e}:{taxonomyTerm:null})}}),React.createElement(i,{label:"Offset",value:e.attributes.offset,type:"number",onChange:function(e){t({offset:e})}}))),React.createElement("div",{className:"bock-wrap"},React.createElement("div",{className:"block-title"},"Loop"),React.createElement(m,{block:"whitepaper-blocks/loop-block",attributes:e.attributes,className:e.className}))]},save:function(e){return null}})},{}],4:[function(e,t,a){"use strict";var o=e("../modules/functions"),l=wp.i18n.__,n=wp.blocks.registerBlockType,r=wp.editor,s=r.InnerBlocks,c=r.InspectorControls,u=r.MediaUpload,i=wp.components,p=i.PanelBody,d=i.TextControl;n("whitepaper-blocks/wrapper-block",{title:l("Wrapper"),description:l("A block for containing other blocks"),icon:"editor-code",category:"formatting",attributes:{blockId:{type:"string",default:null},backgroundImage:{type:"string",default:null},backgroundImageStyle:{type:"string",default:null}},keywords:[l("container"),l("wrapper"),l("section")],edit:function(a){var t=a.setAttributes;return[React.createElement(c,null,React.createElement(p,null,React.createElement(u,{label:"Background Image",onSelect:function(e){t({backgroundImage:e.sizes.full.url}),t({backgroundImageStyle:"url("+e.sizes.full.url+")"})},type:"image",value:a.attributes.backgroundImage,render:function(e){var t=e.open;return(0,o.renderImageUpload)(t,a)}}),React.createElement(d,{label:"Block ID",help:l("A unique HTML ID for this block. Make sure to use all lower case and dashes instead of spaces"),placeholder:"my-id",value:a.attributes.blockId,onChange:function(e){t(e?{blockId:e}:{blockId:null})}}))),React.createElement("div",{className:"block-wrap"},React.createElement("div",{className:"block-title"},"Wrapper"),React.createElement("div",{className:a.className,id:a.attributes.blockId,style:{backgroundImage:a.attributes.backgroundImageStyle}},React.createElement(s,null)))]},save:function(e){return React.createElement("div",{className:e.className,id:e.attributes.blockId,style:{backgroundImage:e.attributes.backgroundImageStyle}},React.createElement(s.Content,null))}})},{"../modules/functions":5}],5:[function(e,t,a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.renderImageUpload=function(e,t){return t.attributes.backgroundImage?React.createElement("div",{className:"image-container"},React.createElement("img",{src:t.attributes.backgroundImage,onClick:e,className:"image"}),React.createElement(o,{onClick:function(){t.setAttributes({backgroundImage:null}),t.setAttributes({backgroundImageStyle:null})},isLink:!0,isDestructive:!0,style:{marginTop:"15px",marginBottom:"15px"}},"Remove Image")):React.createElement("div",{className:"button-container"},React.createElement(o,{onClick:e,isPrimary:!0,style:{width:"100%",justifyContent:"center",marginTop:"15px",marginBottom:"15px"}},"Select an Image"))};var o=wp.components.Button},{}]},{},[3,1,4,2]);
//# sourceMappingURL=maps/blocks.js.map
